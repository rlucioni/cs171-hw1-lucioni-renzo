// Generated by CoffeeScript 1.7.1
d3.text("unemp_states_us_nov_2013.tsv", function(error, data) {
  var dataCells, dataset, header, headerCells, isNumeric, rows, tBody, tHead, table;
  d3.select("body").append("h1").text("Unemployment Rates for States");
  table = d3.select("body").append("table");
  table.append("caption").html("Unemployment Rates for States<br>Monthly Rankings<br>Seasonally Adjusted<br>Dec. 2013<sup>p</sup>");
  tHead = table.append("thead");
  tBody = table.append("tbody");
  dataset = d3.tsv.parseRows(data);
  header = tHead.selectAll("tr").data(dataset.slice(0, 1)).enter().append("tr");
  rows = tBody.selectAll("tr").data(dataset.slice(1)).enter().append("tr").style("background-color", function(d, row) {
    if (row % 2 === 0) {
      return "#e9e9e9";
    } else {
      return "#ffffff";
    }
  });
  headerCells = header.selectAll("th").data(function(row) {
    return row;
  }).enter().append("th").text(function(d) {
    return d;
  });
  dataCells = rows.selectAll("td").data(function(row) {
    return row;
  }).enter().append("td").attr("class", function(d, column) {
    return "column-" + column;
  }).text(function(d) {
    return d;
  });
  dataCells.on("mouseover", function(d, column) {
    d3.select(this.parentNode).style("background-color", "#ffff99");
    return d3.selectAll(".column-" + column).style("background-color", "#ffff99");
  });
  dataCells.on("mouseout", function(d, column) {
    rows.style("background-color", function(d, row) {
      if (row % 2 === 0) {
        return "#e9e9e9";
      } else {
        return "#ffffff";
      }
    });
    return d3.selectAll(".column-" + column).style("background-color", null);
  });
  isNumeric = function(num) {
    return !isNaN(num);
  };
  return headerCells.on("click", function(d, column) {
    return rows = tBody.selectAll("tr").sort(function(a, b) {
      var valueA, valueB;
      valueA = a[column];
      valueB = b[column];
      if (isNumeric(valueA) && isNumeric(valueB)) {
        valueA = +valueA;
        valueB = +valueB;
      }
      return d3.ascending(valueA, valueB);
    }).style("background-color", function(d, row) {
      if (row % 2 === 0) {
        return "#e9e9e9";
      } else {
        return "#ffffff";
      }
    });
  });
});
